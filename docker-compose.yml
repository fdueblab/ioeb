version: '3'

# networks:
#   ioeb-backend_app-network:
#     external: true  # 使用外部网络
networks:
  app-network:
    driver: bridge

services:
  # 前端服务
  frontend:
    image: polarsnowleopard/ioeb-frontend:deploy_ums
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    env_file:
      - ./deploy/fdueblab/env/frontend.env
    networks:
      # - ioeb-backend_app-network
      - app-network
    depends_on:
      - agent
      - backend
      - project-1
      - project-2
      - project-3
      - project-4
    restart: unless-stopped

  # 智能体服务
  agent:
    image: polarsnowleopard/micro-agent:latest
    ports:
      - '8010:8010'
      - '8020:8000'
    stdin_open: true # 保持标准输入开启
    tty: true # 分配伪终端
    restart: unless-stopped
    volumes:
      - ./env/micro-agent.env:/app/.env
      - ./env/deepseek.env:/app/app/mcp/deepseek_server/.env
      - ./env/mysql.env:/app/app/mcp/mysql_server/.env
      - ./env/aml.env:/app/app/mcp/aml_server/.env
      - ./env/config.toml:/app/config/config.toml
    networks:
      - app-network # 加入现有网络

  # 后端服务
  backend:
    image: polarsnowleopard/ioeb-backend:latest
    ports:
      - '5000:5000'
    environment:
      - PYTHONUNBUFFERED=1
    env_file:
      - ../ioeb-backend/.env
    volumes:
      - ../ioeb-backend/app_data:/app/uploads
      - ../ioeb-backend/app_db:/app/instance
    networks:
      - app-network # 加入现有网络

  # 课题一服务
  project-1:
    image: polarsnowleopard/ioeb-project1:ums
    ports:
      - '25001:5000'
    volumes:
      - ./api/Project_1/checkpoint:/app/checkpoint
    environment:
      - FLASK_APP=app.py
      - FLASK_ENV=production
    networks:
      # - ioeb-backend_app-network
      - app-network
    restart: unless-stopped

  # 课题二服务
  project-2:
    image: polarsnowleopard/ioeb-project2:ums
    ports:
      - '25002:5000'
    volumes:
      - ./api/Project_2/checkpoint:/app/checkpoint
    environment:
      - FLASK_APP=app.py
      - FLASK_ENV=production
    networks:
      # - ioeb-backend_app-network
      - app-network
    restart: unless-stopped

  # 课题3服务
  project-3:
    image: polarsnowleopard/ioeb-project3:ums
    ports:
      - '25003:5000'
    volumes:
      - ./api/Project-3/data:/app/data
    environment:
      - FLASK_APP=app.py
      - FLASK_ENV=production
    networks:
      # - ioeb-backend_app-network
      - app-network
    restart: unless-stopped

  # 课题4服务
  project-4:
    image: polarsnowleopard/ioeb-project4:ums
    ports:
      - '25004:5000'
    volumes:
      - ./api/Project-4/eval_config:/app/eval_config
      - ./api/Project-4/eval_result:/app/eval_result
      - ./api/Project-4/graph_dataset:/app/graph_dataset
    environment:
      - FLASK_APP=app.py
      - FLASK_ENV=production
    networks:
      # - ioeb-backend_app-network
      - app-network
    restart: unless-stopped
